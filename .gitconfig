[color]
	ui = true
[user]
	name = Chris Sakai
	email = cs.chris.sakai@gmail.com
[alias]
	uglykeys = config --get-regexp alias
	keys = "!f() { if [ $# -ne 0 ]; then git uglykeys | grep $1; else git keylist; fi; }; f"
	keylist = "!f() { git uglykeys | less; }; f"

	a = add
	aa = add -A
	ai = add -i
	ap = add -p

	b = branch --list
	br = branch
	brd = branch -d
	brr = branch -r
	brm = branch -m
	nbr = branch --no-merged
	mbr = branch --merged

	c = commit
	cv = commit -v

	ch = checkout
	cht = "!f() { if [ $# -ne 0 ]; then git fetch --all; git checkout --track origin/$1; fi; }; f"
	chb = "!f() { if [ $# -ne 0 ]; then src=HEAD; git f; [ -z \"$2\" ] || src=$2; git checkout -b $1 origin/$src; fi; }; f"
	upd = "!f() { git fa; git merge origin/HEAD; }; f"

	cnfg = config

	d = diff
	dc = diff --cached
	ds = diff --word-diff
	sbs = "!f() { git difftool -y -x \"colordiff -y -W $(tput cols)\" | less -R; }; f"

	f = fetch -p
	fa = fetch --all -p

	l = log
	lf = log --format=fuller
	lp = log -p
	ls = log --stat
	last = log -1 HEAD

	mrg = merge

	nicename = rev-parse --abbrev-ref --symbolic-full-name

	o = "!f() { vim $(git status --porcelain | awk '{print $2}'); }; f"

	p = push
	ps = push --set-upstream origin HEAD

	rb = rebase
	rbi = rebase -i
	rba = rebase --abort
	rbc = rebase --continue
	rbs = rebase --skip

	rmo = remote
	rsho = remote set-head origin
	rsha = remote set-head origin -a

	rst = reset
	rsth = reset --hard

	s = status
	ss = status -s

	stsh = stash
	stshr = "!f() { rev=$(git rev-parse $1) && git stash drop $1 || exit 1; git stash store -m $2 $rev; }; f"

	upst = "!f() { src=HEAD; [ $# -ne 0 ] && src=$1; git nicename $src@{u}; }; f"
[push]
	default = tracking
[core]
	editor = nvim
	excludesfile = ~/.gitignore
	ignorecase = false
	; pager = diff-so-fancy | less --tabs=4 -RFX
[pager]
  branch = false
[url "git@github.com:"]
	insteadOf = https://github.com/
; [interactive]
; 	diffFilter = diff-so-fancy --patch
; [color "diff-highlight"]
; 	oldNormal = red bold
; 	oldHighlight = red bold 52
; 	newNormal = green bold
; 	newHighlight = green bold 22
; [color "diff"]
; 	meta = 11
; 	frag = magenta bold
; 	func = 146 bold
; 	commit = yellow bold
; 	old = red bold
; 	new = green bold
; 	whitespace = red reverse
[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
